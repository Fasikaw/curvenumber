{"name":"R curvenumber","tagline":"SCS Curve Number method (R package) ","body":"CURVENUMBER (R-package)\r\n===========================\r\n\r\nSCS Curve Number method\r\n\r\nThis package implements the SCS Curve Number method according to [Hawkins (1993)](http://dx.doi.org/10.1061/(ASCE)0733-9437(1993)119:2(334)).\r\n\r\n#### Basics\r\nInstall and load packages\r\n```R\r\n# Install dependent packages from CRAN:\r\nx <- c(\"pure\", \"hydromad\", \"zoo\", \"EcoHydRology\", \"udunits2\")\r\ninstall.packages(x)\r\nlapply(x, require, character.only=T); rm(x)\r\n\r\n# Install dependent gists and packages from github:\r\nlibrary(devtools)\r\ninstall_github(\"cvitolo/r_CurveNumber\", subdir = \"curvenumber\")\r\n```\r\n\r\n#### Load the library and some test data\r\n\r\n```R\r\nlibrary(curvenumber)\r\ndata(DATA) \r\n\r\n# DATA is in mm/d but the time step is 1 hour, below is an adjustment:\r\nInputTS <- DATA/24; rm(DATA)\r\n```\r\n\r\n### Identify Rainfall-Runoff events\r\nAccording to [Hawkins (1993)](http://dx.doi.org/10.1061/(ASCE)0733-9437(1993)119:2(334)), in order to calculate the curve Number, the rainfall and runoff events can be identified separately. Return periods are then matched using the Frequency Matching approach [Hjelmfelt (1980)](http://cedb.asce.org/cgi/WWWdisplay.cgi?9734). \r\n\r\n```R\r\ndf  <- EventIdentification(dataX = InputTS, PQindependent = FALSE,\r\n                           plotOption = FALSE, variable2plot = \"Q\")\r\n```\r\n\r\n### Calculate the Curve Number\r\nDetermine the CN for each event\r\n```R\r\nnewDF <- CalculateCN(dfTPQ = df, PQunits = \"mm\")\r\n```\r\n\r\nPlot CN-P behaviour to define the type of asymptote\r\n```R\r\nplot(newDF$CN~newDF$P, xlab=\"Rainfall\", ylab=\"Runoff CN\", ylim=c(min(newDF$CN),100))\r\n```\r\n\r\nThere are three types of behaviour: \"standard\" (increasing asymptotically), \"complacent\" (decreasing indefinitely) and \"violent\" (increasing asymptotically).\r\nI the behaviour can be considered standard, then CNinfinity can be calculated by a nonlinear least squares curve fiiting.\r\n\r\nThe variable CNinf is independent from P.\r\nIt is the CN describing the data set for larger rainfall events.\r\n\r\n```R\r\nCN <- newDF$CN\r\nP <- newDF$P\r\n\r\n# Determine parameters first guess\r\nCN0 <- median( sort(CN, decreasing = FALSE)[1:5] )\r\nk=1 # k=0.003\r\n\r\n# nonlinear least squares curve fiiting\r\nfit <- nls(CN ~ CN0 + (100 - CN0) * exp(-k*P), start=list(CN0=CN0,k=k))\r\n\r\nsummary(fit)\r\n\r\ncoefficients(fit)\r\n  \r\n# Sum of squared residuals:\r\nsum(resid(fit)^2) \r\n\r\n# Finally, lets get the parameter confidence intervals.\r\nconfint(fit) \r\n```\r\n\r\nDraw the fit on the plot by getting the prediction from the fit at 200 x-coordinates across the range of P\r\n```R\r\nnew = data.frame(P = seq(min(P),max(P),len=200))\r\nlines(new$P,predict(fit,newdata=new), col=\"red\")\r\n```\r\n\r\n#### Warnings\r\nThis package and functions herein are provided as is, without any guarantee.\r\n\r\n#### Please leave your feedback\r\nI would greatly appreciate if you could leave your feedbacks via email (cvitolodev@gmail.com).\r\n","google":"UA-44379190-6","note":"Don't delete this file! It's used internally to help with page regeneration."}